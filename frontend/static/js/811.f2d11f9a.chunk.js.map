{"version":3,"file":"static/js/811.f2d11f9a.chunk.js","mappings":"kLAEe,SAASA,IACtB,OACEC,EAAAA,EAAAA,KAAA,OAAAC,SAAK,mBAET,CCFe,SAASC,IACtB,OACEF,EAAAA,EAAAA,KAAA,OAAAC,UAEED,EAAAA,EAAAA,KAACG,EAAe,KAGtB,C,uGCHA,MAAMC,EAAgBC,EAAAA,EAAMC,OAAO,CACjCC,QAAS,sCACTC,QAAS,MAIEC,EAASA,KACpB,MAAM,aAAEC,EAAY,YAAEC,EAAW,YAAEC,EAAW,WAAEC,IAAeC,EAAAA,EAAAA,MACzD,UAAEC,IAAcC,EAAAA,EAAAA,KA4EtB,MAAO,CAAEC,WA1EUC,eAAOC,GAAsB,IAAjBC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvCX,IACAG,IACA,IACE,MAAMW,QAAiBpB,EAAcqB,IAAIN,EAAK,CAAEC,WAChD,OAAuB,MAApBI,EAASE,QACH1B,EAAAA,EAAAA,KAAC2B,EAAAA,EAAa,CAACC,SAAUJ,EAASK,aAGpCL,EAASM,IAClB,CAAE,MAAOC,GASP,MARAhB,EAAU,CACRiB,KAAM,QACNC,MAAM,YAADC,OAAcH,EAAMP,SAASE,OAAM,KAAAQ,OAAIH,EAAMP,SAASK,YAC3DM,MAAMC,EAAAA,EAAAA,MAAA,KAAAnC,SAAA,CAAG,qBAAiBD,EAAAA,EAAAA,KAAA,QAAMqC,UAAU,YAAWpC,SAAE8B,EAAMO,QAAQC,iBACrEC,kBAAmB,MAClB,KACD,2BACA,oBACIT,CACR,CAAC,QACCpB,GACF,CACF,EAmDqB8B,YAjDDvB,MAAOC,EAAKW,KAC9BpB,IACAG,IACA,IACE,MAAMW,QAAiBpB,EAAcsC,KAAKvB,EAAKW,GAQ/C,OAPuB,MAApBN,EAASE,QACViB,IAAAA,MAAW,CACTV,MAAO,QACPW,KAAMpB,EAASqB,QACfb,KAAM,UAGHR,EAASM,IAClB,CAAE,MAAOC,GAEP,MADAnB,EAAYmB,EAAMP,SAAWO,EAAMP,SAASM,KAAO,iBAC7CC,CACR,CAAC,QACCpB,GACF,GA+BgCmC,WA5Bf5B,MAAOC,EAAKW,KAC7BpB,IACAG,IACA,IAEE,aADuBT,EAAc2C,IAAI5B,EAAKW,IAC9BA,IAClB,CAAE,MAAOC,GAEP,MADAnB,EAAYmB,EAAMP,SAAWO,EAAMP,SAASM,KAAO,iBAC7CC,CACR,CAAC,QACCpB,GACF,GAiB4CqC,cAdxB9B,UACpBR,IACAG,IACA,IAEE,aADuBT,EAAc6C,OAAO9B,IAC5BW,IAClB,CAAE,MAAOC,GAEP,MADAnB,EAAYmB,EAAMP,SAAWO,EAAMP,SAASM,KAAO,iBAC7CC,CACR,CAAC,QACCpB,GACF,GAG2D,C","sources":["components/template/docs/InputFileUpload.jsx","app/client/dashboard.jsx","hooks/useApi.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nexport default function InputFileUpload() {\r\n  return (\r\n    <div>InputFileUpload</div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport DataGridTable from '../../components/template/slice/DataGridTable'\r\nimport PhoneNumberForm from '../../components/template/docs/InputFileUpload'\r\n\r\nexport default function Dashboard() {\r\n  return (\r\n    <div>\r\n      {/* <DataGridTable/> */}\r\n      <PhoneNumberForm/>\r\n    </div>\r\n  )\r\n}\r\n","// src/api.js\r\n\r\nimport axios from 'axios';\r\nimport ErrorBoundary from '../components/template/slice/ErrorBoundary';\r\nimport Swal from 'sweetalert2';\r\nimport { useLoadingApi } from './useLoadingApi';\r\nimport { useSweetAlert } from './useSweetAlert';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'http://opening.micropiranti.id/api/', // untuk Ganti dengan URL dasar API\r\n  timeout: 10000, // Waktu timeout request\r\n  \r\n});\r\n\r\nexport const useApi = () => {\r\n  const { startLoading, stopLoading, setErrorMsg, clearError } = useLoadingApi();\r\n  const { showAlert } = useSweetAlert();\r\n\r\n  const getRequest = async (url, params = {}) => {\r\n    startLoading();\r\n    clearError();\r\n    try {\r\n      const response = await axiosInstance.get(url, { params });\r\n      if(response.status !== 200) {\r\n        return <ErrorBoundary fallback={response.statusText}/>\r\n      } \r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      showAlert({\r\n        icon: 'error',\r\n        title: `Oops..., ${error.response.status} ${error.response.statusText}`,\r\n        html: <p>Please check url <span className=\"text-info\">{error.request.responseURL}</span></p>,\r\n        confirmButtonText: 'Ok',\r\n      }, 'sm',\r\n        'default-popup-background',\r\n        'default-backdrop')\r\n      throw error;\r\n    } finally {\r\n      stopLoading();\r\n    }\r\n  };\r\n\r\n  const postRequest = async (url, data) => {\r\n    startLoading();\r\n    clearError();\r\n    try {\r\n      const response = await axiosInstance.post(url, data);\r\n      if(response.status !== 200) {\r\n        Swal.error({\r\n          title: \"Error\",\r\n          text: response.message,\r\n          icon: \"error\"\r\n        })\r\n      }\r\n      return response.data;\r\n    } catch (error) {\r\n      setErrorMsg(error.response ? error.response.data : 'Network Error');\r\n      throw error;\r\n    } finally {\r\n      stopLoading();\r\n    }\r\n  };\r\n\r\n  const putRequest = async (url, data) => {\r\n    startLoading();\r\n    clearError();\r\n    try {\r\n      const response = await axiosInstance.put(url, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      setErrorMsg(error.response ? error.response.data : 'Network Error');\r\n      throw error;\r\n    } finally {\r\n      stopLoading();\r\n    }\r\n  };\r\n\r\n  const deleteRequest = async (url) => {\r\n    startLoading();\r\n    clearError();\r\n    try {\r\n      const response = await axiosInstance.delete(url);\r\n      return response.data;\r\n    } catch (error) {\r\n      setErrorMsg(error.response ? error.response.data : 'Network Error');\r\n      throw error;\r\n    } finally {\r\n      stopLoading();\r\n    }\r\n  };\r\n\r\n  return { getRequest, postRequest, putRequest, deleteRequest };\r\n};\r\n"],"names":["InputFileUpload","_jsx","children","Dashboard","PhoneNumberForm","axiosInstance","axios","create","baseURL","timeout","useApi","startLoading","stopLoading","setErrorMsg","clearError","useLoadingApi","showAlert","useSweetAlert","getRequest","async","url","params","arguments","length","undefined","response","get","status","ErrorBoundary","fallback","statusText","data","error","icon","title","concat","html","_jsxs","className","request","responseURL","confirmButtonText","postRequest","post","Swal","text","message","putRequest","put","deleteRequest","delete"],"sourceRoot":""}