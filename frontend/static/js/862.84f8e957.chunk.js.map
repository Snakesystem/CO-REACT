{"version":3,"file":"static/js/862.84f8e957.chunk.js","mappings":"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","sources":["components/template/form-input/InputTypeheadField.jsx","components/layout/bank/BCAForm.jsx","hooks/useApi.jsx","hooks/useSchema.jsx"],"sourcesContent":["// src/AsyncSelectForm.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Controller, useFormContext } from 'react-hook-form';\r\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\r\nimport { ErrorMessage, createOptions } from '../../../utils/utility';\r\nimport { useLoadingApi } from '../../../hooks/useLoadingApi';\r\nimport { useApi } from '../../../hooks/useApi';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst InputTypeheadField = (props) => {\r\n  const { ngModel, label, placeholder, optionKey, optionValue, minLength=2, urlLookup, disabled=false, optionObject } = props;\r\n  const { control, formState: { errors }, getValues } = useFormContext();\r\n  const { isLoading } = useLoadingApi();\r\n  const [options, setOptions] = useState([]);\r\n  const { getRequest } = useApi();\r\n  const defValue = getValues(ngModel)\r\n\r\n  useEffect(() => {\r\n\r\n    if(options === undefined) {\r\n      toast.error(`At ${ngModel} options not null`);\r\n    } else if(typeof options !== 'object') {\r\n      toast.error(`At ${ngModel} options not object array`);\r\n    } \r\n\r\n    if(optionKey === undefined) {\r\n      toast.error(`At ${ngModel} optionKey not null`);\r\n    }\r\n\r\n    if(optionValue === undefined) {\r\n      toast.error(` At ${ngModel} optionValue not null`);\r\n    }\r\n\r\n    if(urlLookup === undefined) {\r\n      toast.error(` At ${ngModel} valueKey not null`);\r\n    }\r\n  }, [ngModel, optionKey, optionValue, urlLookup, options]);\r\n\r\n  const getOptions = async (query) => {\r\n    \r\n    try {\r\n      const response = await getRequest(`${urlLookup}?q=${query}`);\r\n      if(optionObject) {\r\n        const data = response[optionObject];\r\n        if(data) {\r\n          const fieldValue = createOptions(data, optionKey, optionValue);\r\n          setOptions(fieldValue);\r\n        }\r\n      } else {\r\n        const data = response;\r\n        if(data) {\r\n          const fieldValue = createOptions(data, optionKey, optionValue);\r\n          setOptions(fieldValue);\r\n        }\r\n      }\r\n     \r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <label className=\"form-label\" htmlFor={ngModel}>{label}</label>\r\n      <Controller\r\n        name={ngModel}\r\n        control={control}\r\n        render={({ field }) => (\r\n          <div>\r\n            <AsyncTypeahead\r\n              {...field}\r\n              id={ngModel}\r\n              disabled={disabled}\r\n              isLoading={isLoading}\r\n              className={`${errors[ngModel] ? 'is-invalid' : ''}`}\r\n              labelKey=\"optionValue\"\r\n              minLength={minLength}\r\n              onSearch={getOptions}\r\n              options={options}\r\n              defaultSelected={[`${defValue}`]} \r\n              placeholder={placeholder}\r\n              onChange={(selected) => {\r\n                field.onChange(selected.map((option) => option.optionKey));\r\n              }}\r\n            />\r\n            {/* {console.log('val', options.find((option) => option.optionKey === field.value))} */}\r\n            <ErrorMessage ngModel={ngModel} errors={errors} />\r\n          </div>\r\n          )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputTypeheadField;\r\n\r\nInputTypeheadField.propTypes = {\r\n  ngModel: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  optionKey: PropTypes.string.isRequired,\r\n  optionValue: PropTypes.string.isRequired,\r\n  urlLookup: PropTypes.string.isRequired,\r\n  minLength: PropTypes.number,\r\n  optionObject: PropTypes.string\r\n}","import React from 'react'\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport InputTypeheadField from '../../template/form-input/InputTypeheadField';\r\nimport { useSchema } from '../../../hooks/useSchema';\r\n\r\nexport default function BCAForm() {\r\n\r\n  const { bcaSchema } = useSchema();\r\n\r\n  const bcaForm = useForm({\r\n    defaultValues: {\r\n      District: 339,\r\n    },\r\n    resolver: yupResolver(bcaSchema),\r\n    mode: \"all\", // this is mode form validation || \"onSubmit\" || \"onChange\" || \"all\"\r\n  });\r\n\r\n  const { handleSubmit, formState } = bcaForm;\r\n  const { errors } = formState;\r\n\r\n  const submitDataBCA = (data) => {\r\n    console.log(data)\r\n  }\r\n\r\n  console.log('errors', errors)\r\n\r\n  return (\r\n    <FormProvider {...bcaForm}>\r\n      <form noValidate onSubmit={handleSubmit(submitDataBCA)}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <InputTypeheadField \r\n                ngModel=\"District\" \r\n                label=\"District\" \r\n                optionKey=\"id\"\r\n                optionValue=\"login\"\r\n                optionObject=\"items\"\r\n                minLength={2}\r\n                urlLookup=\"https://api.github.com/search/users\"\r\n                placeholder=\"Type at least 2 characters...\"/>\r\n            </div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn\">Submit</button>\r\n      </form>\r\n    </FormProvider>\r\n  )\r\n}\r\n","// src/api.js\r\n\r\nimport axios from 'axios';\r\nimport ErrorBoundary from '../components/template/slice/ErrorBoundary';\r\nimport Swal from 'sweetalert2';\r\nimport { useLoadingApi } from './useLoadingApi';\r\nimport { useSweetAlert } from './useSweetAlert';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'http://opening.micropiranti.id/api/', // untuk Ganti dengan URL dasar API\r\n  timeout: 10000, // Waktu timeout request\r\n  \r\n});\r\n\r\nexport const useApi = () => {\r\n  const { startLoading, stopLoading, setErrorMsg, clearError } = useLoadingApi();\r\n  const { showAlert } = useSweetAlert();\r\n\r\n  const getRequest = async (url, params = {}) => {\r\n    startLoading();\r\n    clearError();\r\n    try {\r\n      const response = await axiosInstance.get(url, { params });\r\n      if(response.status !== 200) {\r\n        return <ErrorBoundary fallback={response.statusText}/>\r\n      } \r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      showAlert({\r\n        icon: 'error',\r\n        title: `Oops..., ${error.response.status} ${error.response.statusText}`,\r\n        html: <p>Please check url <span className=\"text-info\">{error.request.responseURL}</span></p>,\r\n        confirmButtonText: 'Ok',\r\n      }, 'sm',\r\n        'default-popup-background',\r\n        'default-backdrop')\r\n      throw error;\r\n    } finally {\r\n      stopLoading();\r\n    }\r\n  };\r\n\r\n  const postRequest = async (url, data) => {\r\n    startLoading();\r\n    clearError();\r\n    try {\r\n      const response = await axiosInstance.post(url, data);\r\n      if(response.status !== 200) {\r\n        Swal.error({\r\n          title: \"Error\",\r\n          text: response.message,\r\n          icon: \"error\"\r\n        })\r\n      }\r\n      return response.data;\r\n    } catch (error) {\r\n      setErrorMsg(error.response ? error.response.data : 'Network Error');\r\n      throw error;\r\n    } finally {\r\n      stopLoading();\r\n    }\r\n  };\r\n\r\n  const putRequest = async (url, data) => {\r\n    startLoading();\r\n    clearError();\r\n    try {\r\n      const response = await axiosInstance.put(url, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      setErrorMsg(error.response ? error.response.data : 'Network Error');\r\n      throw error;\r\n    } finally {\r\n      stopLoading();\r\n    }\r\n  };\r\n\r\n  const deleteRequest = async (url) => {\r\n    startLoading();\r\n    clearError();\r\n    try {\r\n      const response = await axiosInstance.delete(url);\r\n      return response.data;\r\n    } catch (error) {\r\n      setErrorMsg(error.response ? error.response.data : 'Network Error');\r\n      throw error;\r\n    } finally {\r\n      stopLoading();\r\n    }\r\n  };\r\n\r\n  return { getRequest, postRequest, putRequest, deleteRequest };\r\n};\r\n","/* eslint-disable no-unused-vars */\r\n\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { pawdRegExp, phoneRegExp } from \"../utils/utility\";\r\n\r\n// SCHEMA FORM VALIDATION\r\nexport const useSchema = () => {\r\n\r\n    const [t, i18n] = useTranslation('lang');\r\n\r\n    // SCHEMA VALIDATION FOR REGISTER\r\n    const registerSchema = yup.object().shape({ \r\n        Email: yup.string().email(\"This must be a email\").required(t(\"GLOBAL.mandatory\")),\r\n        Fullname: yup.string().required(t(\"GLOBAL.mandatory\")).min(3, t(\"VALIDATE.minlength\")),\r\n        MobilePhone: yup.string().required(t(\"GLOBAL.mandatory\")).matches(phoneRegExp, t(\"VALIDATE.mobilephone\")),\r\n        BankAccountNumber: yup.string().required(t(\"GLOBAL.mandatory\")),\r\n        BankAccountHolder: yup.string().required(t(\"GLOBAL.mandatory\")),\r\n        QuestionRDN: yup.number().required(t(\"GLOBAL.mandatory\")),\r\n        Sales: yup.number(),\r\n        BankName: yup.string().required(t(\"GLOBAL.mandatory\")),\r\n        Password: yup.string().required(t(\"GLOBAL.mandatory\")).matches(pawdRegExp, t(\"REGIS.strengthpass\")),\r\n        ConfirmPassword: yup.string().required(t(\"GLOBAL.mandatory\")).oneOf([yup.ref(\"Password\"), null], t(\"VALIDATE.ConfPassErr\")),\r\n    }).required();\r\n\r\n    // SCHEMA VALIDATION FOR LOGIN\r\n    const loginSchema = yup.object().shape({ \r\n        Email: yup.string().email(\"This must be a email\").required(t(\"GLOBAL.mandatory\")),\r\n        Password: yup.string().required(t(\"GLOBAL.mandatory\")),\r\n    }).required();\r\n\r\n    // SCHEMA VALIDATION FOR BANK BCA\r\n    const bcaSchema = yup.object().shape({ \r\n        District: yup.number().required(t(\"GLOBAL.mandatory\")),\r\n    }).required();\r\n\r\n    // SCHEMA VALIDATION FOR BANK BCA\r\n    const briSchema = yup.object().shape({ \r\n        District: yup.number().required(t(\"GLOBAL.mandatory\")),\r\n    }).required();\r\n\r\n    // SCHEMA VALIDATION FOR BANK BCA\r\n    const permataSchema = yup.object().shape({ \r\n        Occupation: yup.string(),\r\n        Position: yup.string(),\r\n        NatureOfBusiness: yup.string(),\r\n    }).required();\r\n\r\n    // SCHEMA VALIDATION FOR DATA PRIBADI\r\n    const dataPribadiSchema = yup.object({ \r\n        // Email: yup.string().email(\"This must be a email\").required(t(\"GLOBAL.mandatory\")),\r\n        // Fullname: yup.string().required(t(\"GLOBAL.mandatory\")),\r\n        // Agree: yup.boolean().required(t(\"GLOBAL.mandatory\")),\r\n        fundsource: yup.array().required(t(\"GLOBAL.mandatory\")),\r\n    }).required();\r\n\r\n    // SCHEMA VALIDATION FOR DATA PENDUKUNG\r\n    const dataPendukungSchema = yup.object({ \r\n        IDCardFile: yup.string(),\r\n        SelfieFile: yup.string(),\r\n        SignatureFile: yup.string(),\r\n    }).required();\r\n\r\n    return { registerSchema, loginSchema, bcaSchema, briSchema, permataSchema, dataPribadiSchema, dataPendukungSchema };\r\n}"],"names":["props","ngModel","label","placeholder","optionKey","optionValue","minLength","urlLookup","disabled","optionObject","control","formState","errors","getValues","useFormContext","isLoading","useLoadingApi","options","setOptions","useState","getRequest","useApi","defValue","useEffect","undefined","toast","error","concat","getOptions","async","response","query","data","fieldValue","createOptions","message","_jsxs","className","children","_jsx","htmlFor","Controller","name","render","_ref","field","AsyncTypeahead","id","labelKey","onSearch","defaultSelected","onChange","selected","map","option","ErrorMessage","BCAForm","bcaSchema","useSchema","bcaForm","useForm","defaultValues","District","resolver","yupResolver","mode","handleSubmit","console","log","FormProvider","noValidate","onSubmit","InputTypeheadField","type","axiosInstance","axios","create","baseURL","timeout","startLoading","stopLoading","setErrorMsg","clearError","showAlert","useSweetAlert","url","params","arguments","length","get","status","ErrorBoundary","fallback","statusText","icon","title","html","request","responseURL","confirmButtonText","postRequest","post","Swal","text","putRequest","put","deleteRequest","delete","t","i18n","useTranslation","registerSchema","yup","shape","Email","email","required","Fullname","min","MobilePhone","matches","phoneRegExp","BankAccountNumber","BankAccountHolder","QuestionRDN","Sales","BankName","Password","pawdRegExp","ConfirmPassword","oneOf","loginSchema","briSchema","permataSchema","Occupation","Position","NatureOfBusiness","dataPribadiSchema","fundsource","dataPendukungSchema","IDCardFile","SelfieFile","SignatureFile"],"sourceRoot":""}