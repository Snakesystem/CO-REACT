{"version":3,"file":"static/js/868.ca55f389.chunk.js","mappings":"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","sources":["components/layout/bank/PermataForm.jsx","hooks/useHighRisk.jsx","components/template/form-input/SelectDynamic.jsx","hooks/useApi.jsx","hooks/useSchema.jsx"],"sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { FormProvider } from 'react-hook-form';\r\nimport { useApi } from '../../../hooks/useApi'\r\nimport SelectDynamic from '../../template/form-input/SelectDynamic';\r\nimport useHighRisk from '../../../hooks/useHighRisk'\r\nimport { useSchema } from '../../../hooks/useSchema';\r\n\r\nexport default function Permata() {\r\n\r\n  const [occ, setOcc] = useState([]);\r\n  const [poss, setPoss] = useState([]);\r\n  const [nature, setNature] = useState([]);\r\n  const { getRequest } = useApi()\r\n  const { permataSchema } = useSchema();\r\n\r\n  const permataForm = useForm({\r\n    defaultValues: {\r\n      Occupation: \"\",\r\n      Position: \"\",\r\n      NatureOfBusiness: \"\",\r\n    },\r\n    resolver: yupResolver(permataSchema),\r\n    mode: \"all\", // this is mode form validation || \"onSubmit\" || \"onChange\" || \"all\"\r\n  });\r\n\r\n  const { handleSubmit, formState, watch } = permataForm;\r\n  const { isValid, errors } = formState;\r\n  const [occupation, position, naturebusiness] = watch(['Occupation', 'Position', 'NatureOfBusiness']);\r\n  useHighRisk(occupation, position, naturebusiness)\r\n\r\n  const submitDataBRI = (data) => {\r\n    console.log(data)\r\n  }\r\n\r\n  const getOccupation = async () => {\r\n    try {\r\n      const result = await getRequest(`list/occupation`);\r\n      setOcc(result);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const getPosition = async () => {\r\n    try {\r\n      const result = await getRequest(`list/position`);\r\n      setPoss(result);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const getNatureBusiness = async () => {\r\n    try {\r\n      const result = await getRequest(`list/naturebusiness`);\r\n      setNature(result);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n    getOccupation();\r\n    getPosition();\r\n    getNatureBusiness();\r\n\r\n  }, []);\r\n  \r\n  return (\r\n    <FormProvider {...permataForm}>\r\n      <form noValidate onSubmit={handleSubmit(submitDataBRI)}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <SelectDynamic ngModel=\"Occupation\" label=\"Occupation\" options={occ} optionKey=\"code\" optionValue=\"description\" valueKey=\"number\" />\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <SelectDynamic ngModel=\"Position\" label=\"Position\" options={poss} optionKey=\"code\" optionValue=\"description\" valueKey=\"number\" />\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <SelectDynamic ngModel=\"NatureOfBusiness\" label=\"NatureOfBusiness\" options={nature} optionKey=\"code\" optionValue=\"description\" valueKey=\"number\" />\r\n            </div>\r\n          </div>\r\n      </form>\r\n    </FormProvider>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\nimport { useSweetAlert } from './useSweetAlert';\r\nimport axios from 'axios';\r\n\r\nexport default function useHighRisk(occupation, position, naturebusiness) {\r\n\r\n    const [highRisk, setHighRisk] = useState(false);\r\n    const { showAlert } = useSweetAlert();\r\n\r\n    const postData = {\r\n        Occupation: Number(occupation),\r\n        Position: Number(position),\r\n        NatureOfBusiness: Number(naturebusiness)\r\n    }\r\n\r\n    const postHightRisk = async () => {\r\n        try {\r\n            const response = await axios.post('http://202.158.44.116:8070/service/EFORMService.svc/HighRiskInquiry', postData, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': true,\r\n                    'Access-Control-Allow-Headers': 'Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers,Authorization',\r\n                    'Access-Control-Allow-Methods': 'POST',\r\n                    'Access-Control-Allow-Credentials': true\r\n                    \r\n                  },\r\n              })\r\n            console.log(response)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    } \r\n    \r\n    postHightRisk()\r\n\r\n  return console.log(\"hadeh\")\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Controller, useFormContext } from 'react-hook-form';\r\nimport { ErrorMessage, createOptions, LoadingSkeleton } from '../../../utils/utility';\r\nimport { toast } from 'react-toastify';\r\nimport { useLoadingApi } from '../../../hooks/useLoadingApi';\r\n\r\nexport default function SelectDynamic(props) {\r\n\r\n    const { ngModel, label, options, optionKey, optionValue, valueKey, disabled } = props;\r\n    const { control, formState } = useFormContext();\r\n    const { errors } = formState;\r\n    const { isLoading } = useLoadingApi()\r\n\r\n    const fieldOptions = createOptions(options, optionKey, optionValue);\r\n\r\n    useEffect(() => {\r\n\r\n      if(options === undefined) {\r\n        toast.error(`At ${ngModel} options not null`);\r\n      } else if(typeof options !== 'object') {\r\n        toast.error(`At ${ngModel} options not object array`);\r\n      } \r\n\r\n      if(optionKey === undefined) {\r\n        toast.error(`At ${ngModel} optionKey not null`);\r\n      }\r\n\r\n      if(optionValue === undefined) {\r\n        toast.error(` At ${ngModel} optionValue not null`);\r\n      }\r\n\r\n      if(valueKey === undefined) {\r\n        toast.error(` At ${ngModel} valueKey not null`);\r\n      }\r\n    }, [ngModel, optionKey, optionValue, valueKey, options]);\r\n\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <label className=\"form-label\" htmlFor={ngModel}>{label}</label>\r\n      <Controller\r\n        name={ngModel}\r\n        control={control}\r\n        render={({ field }) => (\r\n          <select className={`form-select ${errors[ngModel] ? 'is-invalid' : ''}`} disabled={disabled} {...field} aria-label=\"Default select example\">\r\n            <option value={typeof valueKey !== 'number' ? 0 : ''}> ---Please choice--- </option>\r\n            {isLoading ? <LoadingSkeleton count={1} /> : fieldOptions ? fieldOptions.map(({ optionKey, optionValue }, index) => (\r\n              <option key={index} value={optionKey}>{optionValue}</option>\r\n            )) : <option>Not Found</option>}\r\n          </select>\r\n        )}\r\n      />\r\n      <ErrorMessage ngModel={ngModel} errors={errors} />\r\n    </div>\r\n  )\r\n}\r\n\r\nSelectDynamic.propTypes = {\r\n    ngModel: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    label: PropTypes.string.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    optionKey: PropTypes.string.isRequired,\r\n    optionValue: PropTypes.string.isRequired,\r\n    valueKey: PropTypes.string.isRequired,\r\n    disabled: PropTypes.bool\r\n};\r\n","// src/api.js\r\n\r\nimport axios from 'axios';\r\nimport ErrorBoundary from '../components/template/slice/ErrorBoundary';\r\nimport Swal from 'sweetalert2';\r\nimport { useLoadingApi } from './useLoadingApi';\r\nimport { useSweetAlert } from './useSweetAlert';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'http://opening.micropiranti.id/api/', // untuk Ganti dengan URL dasar API\r\n  timeout: 10000, // Waktu timeout request\r\n  \r\n});\r\n\r\nexport const useApi = () => {\r\n  const { startLoading, stopLoading, setErrorMsg, clearError } = useLoadingApi();\r\n  const { showAlert } = useSweetAlert();\r\n\r\n  const getRequest = async (url, params = {}) => {\r\n    startLoading();\r\n    clearError();\r\n    try {\r\n      const response = await axiosInstance.get(url, { params });\r\n      if(response.status !== 200) {\r\n        return <ErrorBoundary fallback={response.statusText}/>\r\n      } \r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      showAlert({\r\n        icon: 'error',\r\n        title: `Oops..., ${error.response.status} ${error.response.statusText}`,\r\n        html: <p>Please check url <span className=\"text-info\">{error.request.responseURL}</span></p>,\r\n        confirmButtonText: 'Ok',\r\n      }, 'sm',\r\n        'default-popup-background',\r\n        'default-backdrop')\r\n      throw error;\r\n    } finally {\r\n      stopLoading();\r\n    }\r\n  };\r\n\r\n  const postRequest = async (url, data) => {\r\n    startLoading();\r\n    clearError();\r\n    try {\r\n      const response = await axiosInstance.post(url, data);\r\n      if(response.status !== 200) {\r\n        Swal.error({\r\n          title: \"Error\",\r\n          text: response.message,\r\n          icon: \"error\"\r\n        })\r\n      }\r\n      return response.data;\r\n    } catch (error) {\r\n      setErrorMsg(error.response ? error.response.data : 'Network Error');\r\n      throw error;\r\n    } finally {\r\n      stopLoading();\r\n    }\r\n  };\r\n\r\n  const putRequest = async (url, data) => {\r\n    startLoading();\r\n    clearError();\r\n    try {\r\n      const response = await axiosInstance.put(url, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      setErrorMsg(error.response ? error.response.data : 'Network Error');\r\n      throw error;\r\n    } finally {\r\n      stopLoading();\r\n    }\r\n  };\r\n\r\n  const deleteRequest = async (url) => {\r\n    startLoading();\r\n    clearError();\r\n    try {\r\n      const response = await axiosInstance.delete(url);\r\n      return response.data;\r\n    } catch (error) {\r\n      setErrorMsg(error.response ? error.response.data : 'Network Error');\r\n      throw error;\r\n    } finally {\r\n      stopLoading();\r\n    }\r\n  };\r\n\r\n  return { getRequest, postRequest, putRequest, deleteRequest };\r\n};\r\n","/* eslint-disable no-unused-vars */\r\n\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { pawdRegExp, phoneRegExp } from \"../utils/utility\";\r\n\r\n// SCHEMA FORM VALIDATION\r\nexport const useSchema = () => {\r\n\r\n    const [t, i18n] = useTranslation('lang');\r\n\r\n    // SCHEMA VALIDATION FOR REGISTER\r\n    const registerSchema = yup.object().shape({ \r\n        Email: yup.string().email(\"This must be a email\").required(t(\"GLOBAL.mandatory\")),\r\n        Fullname: yup.string().required(t(\"GLOBAL.mandatory\")).min(3, t(\"VALIDATE.minlength\")),\r\n        MobilePhone: yup.string().required(t(\"GLOBAL.mandatory\")).matches(phoneRegExp, t(\"VALIDATE.mobilephone\")),\r\n        BankAccountNumber: yup.string().required(t(\"GLOBAL.mandatory\")),\r\n        BankAccountHolder: yup.string().required(t(\"GLOBAL.mandatory\")),\r\n        QuestionRDN: yup.number().required(t(\"GLOBAL.mandatory\")),\r\n        Sales: yup.number(),\r\n        BankName: yup.string().required(t(\"GLOBAL.mandatory\")),\r\n        Password: yup.string().required(t(\"GLOBAL.mandatory\")).matches(pawdRegExp, t(\"REGIS.strengthpass\")),\r\n        ConfirmPassword: yup.string().required(t(\"GLOBAL.mandatory\")).oneOf([yup.ref(\"Password\"), null], t(\"VALIDATE.ConfPassErr\")),\r\n    }).required();\r\n\r\n    // SCHEMA VALIDATION FOR LOGIN\r\n    const loginSchema = yup.object().shape({ \r\n        Email: yup.string().email(\"This must be a email\").required(t(\"GLOBAL.mandatory\")),\r\n        Password: yup.string().required(t(\"GLOBAL.mandatory\")),\r\n    }).required();\r\n\r\n    // SCHEMA VALIDATION FOR BANK BCA\r\n    const bcaSchema = yup.object().shape({ \r\n        District: yup.number().required(t(\"GLOBAL.mandatory\")),\r\n    }).required();\r\n\r\n    // SCHEMA VALIDATION FOR BANK BCA\r\n    const briSchema = yup.object().shape({ \r\n        District: yup.number().required(t(\"GLOBAL.mandatory\")),\r\n    }).required();\r\n\r\n    // SCHEMA VALIDATION FOR BANK BCA\r\n    const permataSchema = yup.object().shape({ \r\n        Occupation: yup.string(),\r\n        Position: yup.string(),\r\n        NatureOfBusiness: yup.string(),\r\n    }).required();\r\n\r\n    // SCHEMA VALIDATION FOR DATA PRIBADI\r\n    const dataPribadiSchema = yup.object({ \r\n        // Email: yup.string().email(\"This must be a email\").required(t(\"GLOBAL.mandatory\")),\r\n        // Fullname: yup.string().required(t(\"GLOBAL.mandatory\")),\r\n        // Agree: yup.boolean().required(t(\"GLOBAL.mandatory\")),\r\n        fundsource: yup.array().required(t(\"GLOBAL.mandatory\")),\r\n    }).required();\r\n\r\n    // SCHEMA VALIDATION FOR DATA PENDUKUNG\r\n    const dataPendukungSchema = yup.object({ \r\n        // Email: yup.string().email(\"This must be a email\").required(t(\"GLOBAL.mandatory\")),\r\n        // Fullname: yup.string().required(t(\"GLOBAL.mandatory\")),\r\n        // Agree: yup.boolean().required(t(\"GLOBAL.mandatory\")),\r\n        fundsource: yup.array().required(t(\"GLOBAL.mandatory\")),\r\n    }).required();\r\n\r\n    return { registerSchema, loginSchema, bcaSchema, briSchema, permataSchema, dataPribadiSchema, dataPendukungSchema };\r\n}"],"names":["Permata","occ","setOcc","useState","poss","setPoss","nature","setNature","getRequest","useApi","permataSchema","useSchema","permataForm","useForm","defaultValues","Occupation","Position","NatureOfBusiness","resolver","yupResolver","mode","handleSubmit","formState","watch","isValid","errors","occupation","position","naturebusiness","highRisk","setHighRisk","showAlert","useSweetAlert","postData","Number","async","response","axios","post","headers","console","log","error","postHightRisk","useHighRisk","useEffect","result","getOccupation","getPosition","getNatureBusiness","_jsx","FormProvider","children","noValidate","onSubmit","data","_jsxs","className","SelectDynamic","ngModel","label","options","optionKey","optionValue","valueKey","props","disabled","control","useFormContext","isLoading","useLoadingApi","fieldOptions","createOptions","undefined","toast","concat","htmlFor","Controller","name","render","_ref","field","value","LoadingSkeleton","count","map","_ref2","index","ErrorMessage","axiosInstance","create","baseURL","timeout","startLoading","stopLoading","setErrorMsg","clearError","url","params","arguments","length","get","status","ErrorBoundary","fallback","statusText","icon","title","html","request","responseURL","confirmButtonText","postRequest","Swal","text","message","putRequest","put","deleteRequest","delete","t","i18n","useTranslation","registerSchema","yup","shape","Email","email","required","Fullname","min","MobilePhone","matches","phoneRegExp","BankAccountNumber","BankAccountHolder","QuestionRDN","Sales","BankName","Password","pawdRegExp","ConfirmPassword","oneOf","loginSchema","bcaSchema","District","briSchema","dataPribadiSchema","fundsource","dataPendukungSchema"],"sourceRoot":""}